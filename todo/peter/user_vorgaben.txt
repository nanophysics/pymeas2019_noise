	picoscope 
	range	0.1 # oder auto
	offset	0.0 # oder auto
	channel	A
	bit	15
	dt_s	1.0 / 125E6
	duration_s	2

medium
	picoscope
	range	0.1 # oder auto
	offset	0.0 # oder auto
	channel	A
	bit	16
	dt_s	1.0 / 64E6
	duration_s	2

slow
	picoscope
	range	0.1 # oder auto
	offset	0.0 # oder auto
	channel	B  # bereits tiefpass gefiltert fg...
	bit	16
	dt_s	1.0 / 100E5
	duration_s	infinite # bis abbruch durch Benutzer

concentration:

density

first 
	f_low = 30 E6 
	f_high = max

second
	f_low = 100 E5 
	f_high = 30 E6

third
	f_low = min
	f_high = 100 E5

bereiche dürfen überlappen

log log
plt.ylim( 1e-8,1e-6)
plt.xlim(1e2, 1e5)
series='E12'

abspeichern als svg

idee struktur files

output
output/run_create_plot.py
output/20191231_23_10_red__input_noise_xy/0_raw
output/20191231_23_10_red__input_noise_xy/1_condensed
output/20191231_23_40_black__condensed/0_raw
output/20191231_23_40_black__condensed/1_condensed

im file run_create_plot.py 
	parameter für den plot vorgegeben
bei mehreren unterordnern werden alle messwerte in einem plot dargestellt
allenfalls vorgabe farbe der linie in ordnernahmen
name der kurve im plot: input_noise_xy, also ohne farbe und ohne datum





